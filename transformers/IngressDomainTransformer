#!/usr/bin/env python3
import yaml
import os
import sys


def main(args=sys.argv[2:]):
    hostname = args[0]
    resources = yaml.load_all(sys.stdin, Loader=yaml.FullLoader)
    ingresses = []
    for resource in resources:
        if resource['apiVersion'] in ['extensions/v1beta1', 'networking.k8s.io/v1', 'networking.k8s.io/v1beta1'] and resource['kind'] == 'Ingress':
            annotations = resource['metadata']['annotations']
            for entry in resource['spec'].get('tls', []):
                if 'hosts' in entry:
                    for idx, domain in enumerate(entry['hosts']):
                        entry['hosts'][idx] = transform_host(
                            entry['hosts'][idx], hostname)
                if 'rules' in resource['spec']:
                    for rule in resource['spec']['rules']:
                        rule['host'] = transform_host(rule['host'], hostname)
        ingresses.append(resource)
    sys.stdout.write(yaml.dump_all(ingresses))


def transform_host(host, hostname):
    return host.format(hostname=hostname)


if __name__ == '__main__':
    sys.stdin.reconfigure(encoding='utf-8')
    sys.stdout.reconfigure(encoding='utf-8')
    sys.stderr.reconfigure(encoding='utf-8')
    main()
